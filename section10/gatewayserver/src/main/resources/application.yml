spring:
  application:
    name: "gatewayserver"
  config:
    import: optional:configserver:http://localhost:8071/
  cloud:
    gateway:
      discovery:
        locator:
          enabled: false
          lower-case-service-id: true
      httpclient:
        connect-timeout: 1000
        response-timeout: 2s
  data:
    redis:
      connect-timeout: 2s
      host: localhost
      port: 6379
      timeout: 1s

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    gateway:
      enabled: true
  info:
    env:
      enabled: true

info:
  app:
    name: "gatewayserver"
    description: "Eazy Bank Gateway Application"
    version: "1.0.0"

logging:
  level:
    com:
      eazybytes:
        gatewayserver: DEBUG

resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10 #How many requests initially it has to monitor before it try to change status from close to open.
      permittedNumberOfCallsInHalfOpenState: 2 #Based on how these 2 requests are processed it can decide to go back to close or open state.
      failureRateThreshold: 50 #threshold specifies the percentage of failed calls that will trigger the circuit breaker to open, thereby preventing further calls to a potentially faulty service for a period of time.
      waitDurationInOpenState: 10000

